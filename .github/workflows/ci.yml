name: Dynamic Pytest Workflow

on:
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: pip install -r requirements.txt  # Adjust based on your project setup

    - name: Run tests
      run: pytest

    - name: Check for changes in files
      id: check_changes
      run: echo "::set-output name=changed_files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})"

    - name: Filter tests based on changes
      id: filter_tests
      run: |
        # Modify the command below based on your project structure
        affected_files=$(echo "${{ steps.check_changes.outputs.changed_files }}" | grep '^src/.*\.py$\|^tests/.*\.py$' || true)
        echo "::set-output name=affected_files::$affected_files"

    - name: Run only affected tests
      if: steps.filter_tests.outputs.affected_files != ''
      run: |
        # Install pytest-xdist for parallel test execution
        pip install pytest-xdist

        # Run tests in parallel for affected files
        pytest -k "${{ steps.filter_tests.outputs.affected_files }}" -n auto


